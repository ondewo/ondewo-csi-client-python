# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ondewo.csi import conversation_pb2 as ondewo_dot_csi_dot_conversation__pb2


class ConversationsStub(object):
    """endpoints of csi service"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.S2sStream = channel.stream_stream(
            "/ondewo.csi.Conversations/S2sStream",
            request_serializer=ondewo_dot_csi_dot_conversation__pb2.S2sStreamRequest.SerializeToString,
            response_deserializer=ondewo_dot_csi_dot_conversation__pb2.S2sStreamResponse.FromString,
        )


class ConversationsServicer(object):
    """endpoints of csi service"""

    def S2sStream(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ConversationsServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "S2sStream": grpc.stream_stream_rpc_method_handler(
            servicer.S2sStream,
            request_deserializer=ondewo_dot_csi_dot_conversation__pb2.S2sStreamRequest.FromString,
            response_serializer=ondewo_dot_csi_dot_conversation__pb2.S2sStreamResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler("ondewo.csi.Conversations", rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Conversations(object):
    """endpoints of csi service"""

    @staticmethod
    def S2sStream(
        request_iterator,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.stream_stream(
            request_iterator,
            target,
            "/ondewo.csi.Conversations/S2sStream",
            ondewo_dot_csi_dot_conversation__pb2.S2sStreamRequest.SerializeToString,
            ondewo_dot_csi_dot_conversation__pb2.S2sStreamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
